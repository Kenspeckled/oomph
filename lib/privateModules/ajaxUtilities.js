// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, ajaxUtilities;

  Promise = require('promise');

  ajaxUtilities = {
    httpRequest: function(method, url, args, isJson) {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          var client, params, uri;
          client = new XMLHttpRequest;
          uri = url;
          if (method !== 'POST') {
            if (args) {
              uri += '?';
              uri += _this.objectToQueryString(args);
            }
            client.open(method, uri);
            client.send();
          } else {
            params = _this.objectToQueryString(args);
            client.open(method, url);
            client.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            client.send(params);
          }
          console.log("Ajax", method + " to " + uri, params);
          return client.onload = function() {
            if (this.status === 200) {
              if (isJson) {
                return resolve(JSON.parse(this.response));
              } else {
                return resolve(this.response);
              }
            } else {
              return reject(this.statusText);
            }
          };
        };
      })(this));
    },
    queryStringToObject: function(querystring) {
      var pairs, result;
      pairs = querystring.replace('?', '').split('&');
      result = {};
      pairs.forEach(function(pair) {
        pair = pair.split('=');
        return result[pair[0]] = decodeURIComponent(pair[1] || '');
      });
      return result;
    },
    objectToQueryString: function(obj, prefix) {
      var k, p, str, v;
      str = [];
      for (p in obj) {
        if (obj.hasOwnProperty(p)) {
          k = prefix ? prefix + '[' + p + ']' : p;
          v = obj[p];
          str.push(typeof v === 'object' ? this.objectToQueryString(v, k) : encodeURIComponent(k) + '=' + encodeURIComponent(v));
        }
      }
      return str.join('&');
    }
  };

  module.exports = ajaxUtilities;

}).call(this);
